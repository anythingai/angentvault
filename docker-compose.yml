version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_PROVIDER=postgresql
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agentvault
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - BEDROCK_MODEL_ID=${BEDROCK_MODEL_ID}
      - CDP_API_KEY=${CDP_API_KEY}
      - CDP_API_SECRET=${CDP_API_SECRET}
      - COINBASE_API_KEY=${COINBASE_API_KEY}
      - COINBASE_API_SECRET=${COINBASE_API_SECRET}
      - X402PAY_API_KEY=${X402PAY_API_KEY}
      - X402PAY_SECRET=${X402PAY_SECRET}
      - PINATA_JWT=${PINATA_JWT}
      - PINATA_GATEWAY_KEY=${PINATA_GATEWAY_KEY}
    depends_on:
      - redis
      - postgres
    volumes:
      - ./prisma:/app/prisma
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: agentvault
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  postgres_data: 